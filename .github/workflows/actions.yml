name: MasterDeployCI
on:
#  on:
#    pull_request:
#      branches:
#        - master
#    push:
#      branches:
#        - master
  push:
    branches:
      - feature
      - master
env:
  DOCKER_CLI_EXPERIMENTAL: enabled
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [10.x]
    steps:
    - uses: actions/checkout@v2
#    - name: Build the Docker image AND run tests
#      run: |
#        cd ./client
#        docker build -f Dockerfile.dev -t test_image .
#        docker run test_image npm test -- --coverage
      #-e CI=true
    - name: Push
      run: |
        echo "${DOCKER_PASSWORD}" | docker login "${DOCKER_REGISTRY}" -u "${DOCKER_USERNAME}" --password-stdin

        echo "building 'client image'"
        cd ./client
        docker build -f Dockerfile.dev -t ${DOCKER_USERNAME}/client .
        cd ..
        docker push ${DOCKER_USERNAME}/client:${TAG}
        cd ..
        pwd
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_ID }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_AUTH }}
        DOCKER_REGISTRY: registry.hub.docker.com
        TAG: latest
#    - name: Publish to Registry
#        uses: HurricanKai/Publish-Docker-Github-Action@master
#        with:
#          name: ${{ secrets.DOCKER_ID }}/client
#          username: ${{ secrets.DOCKER_ID }}
#          password: ${{ secrets.DOCKER_AUTH }}
#          registry: registry.hub.docker.com\
#          tagging: true
#          dockerfile: MyDockerFileName

#    - name: Login to GitHub Docker Registry
#        run: docker login docker.pkg.github.com --username $DOCKER_USERNAME --password $DOCKER_PASSWORD
#        env:
#          DOCKER_USERNAME: ${{ secrets.GITHUB_DOCKER_USERNAME }}
#          DOCKER_PASSWORD: ${{ secrets.GITHUB_DOCKER_PASSWORD }}
#    - name: Push to dockerhub
#      uses: actions/docker/login@master
#      env:
#        DOCKER_REGISTRY_URL: registry.hub.docker.com
#        DOCKER_USERNAME: ${{ secrets.DOCKER_ID }}
#        DOCKER_PASSWORD: ${{ secrets.DOCKER_AUTH }}
#      if: github.ref == 'refs/heads/master'
#      run: |
#        docker push  docker.pkg.github.com/repoowner/repo_name/image_name:tag


      #        docker login docker.pkg.github.com --username "${DOCKER_ID}" --password "${DOCKER_AUTH}"
    - name: Check
      run: echo "Check health"


# =========
#sudo: required
#language: generic # ?
#services:
#  - docker
#
#before_install:
#  - docker build -t IMAGE -f ./client/Dockerfile.dev .
#
#script:
#  - docker run -e CI=true IMAGE npm test
#
#after_success:
#  - docker build -t ___ ./client
#  - docker build -t ___ ./nginx
#  - docker build -t ___ ./server
#  - docker build -t ___ ./worker